<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reserve.dao.reserve-mapper">
	<select id="reserveRowCount" resultType="int">
		SELECT COUNT(*) FROM zipreg
	</select>
	<select id="reserveListData" resultType="Reserve" parameterType="java.util.Map">
		SELECT h_nhome,h_money, dbday ,h_addr1, num
		FROM (SELECT
		h_nhome,h_money, TO_CHAR(regdate,'YYYY-MM-DD') as dbday ,
		rownum as num
		FROM (SELECT h_nhome,h_money, regdate
		FROM reserve ORDER BY no DESC))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<select id="reserveContentData" resultType="Reserve"
		parameterType="int">
		SELECT no,name,subject,content,regdate,hit,+<!-- 시설등록,숙소시설,시설종류 컬럼 -->
		FROM reserve,<!-- 집등록,시설등록,숙소시설,시설종류 조인 -->
		WHERE no=#{no}
	</select>
	<insert id="reviewNewInsert" parameterType="Review">
		<selectKey keyProperty="re_No" resultType="int" order="BEFORE">
			SELECT NVL(MAX(re_No)+1,1) FROM review
		</selectKey>
		INSERT INTO review
		VALUES(#{re_No},#{re_Id},#{re_hNo},#{re_Content},SYSDATE)
	</insert>
	<update id="reviewReUpdate" parameterType="Review">
		UPDATE review SET
		re_content=#{re_content}
		WHERE re_no=#{re_no}
	</update>
	<delete id="reviewDelete" parameterType="int">
		DELETE FROM review
		WHERE
		re_no=#{re_no}
	</delete>
	<update id="reviewContentUpdate" parameterType="int">
		UPDATE review SET
		re_content='삭제된 후기입니다'
		WHERE re_no=#{re_no}
	</update>
	<select id="reviewCount" resultType="int" parameterType="int">
		SELECT
		COUNT(*) FROM review
		WHERE re_hno=#{re_hno}
	</select>
	<select id="reviewListData" resultType="Review" parameterType="int">
		SELECT re_No,re_Id,re_hNo,re_Content,re_Date
		FROM review
		WHERE
		re_hno=#{re_hno}
	</select>

	<!-- 맵 이동시 목록가져오기 -->
	<select id="listByMovingMap" resultType="ZipReg">
		SELECT h_No, h_rType, h_nHome, h_Addr1, h_Money, h_loc, (SELECT COUNT(re_no)
		                                                         FROM review 
		                                                         WHERE re_hNo = h_No) "replyCount" , (SELECT p_File
		                                                                                              FROM home_photo
		                                                                                              WHERE p_hno = h_No AND ROWNUM = 1) "image"
		FROM zipreg 
		WHERE h_Endday >= SYSDATE AND h_Close = 'n'
		ORDER BY h_no DESC
	</select>
	
	<!-- ZipRegDTO에 등록된 시설을 가져올 Fac_regDTO 타입의 리스트를 추가 하여 그 값을 읽기 위한 resultmap을 생성 -->
	<resultMap type="ZipReg" id="ZipResult">
		<collection property="facList" column="h_No" ofType="Fac_reg" select="facReg"/>
	</resultMap>
	
	<!-- 필터를 이용한 검색 쿼리 -->
	<select id="listByFilter" resultMap="ZipResult" parameterType="java.util.Map" >
		SELECT h_No, h_rType, h_nHome, h_Addr1, h_Money, h_loc, (SELECT COUNT(re_no)
		                                                         FROM review 
		                                                         WHERE re_hNo = h_No) "replyCount" , (SELECT p_File
		                                                                                              FROM home_photo
		                                                                                              WHERE p_hno = h_No AND ROWNUM = 1) "image"
		FROM zipreg 
		WHERE h_Endday >= SYSDATE AND h_Close = 'n'
		<if test="startDay != null">
         	AND #{startDay} >= h_startday
        </if>
        <if test="endDay != null">
         	AND h_endday >= #{endDay}
        </if>
        <if test="peopleNum != null">
         	AND h_nperson >= #{peopleNum}
        </if>
        <if test="roomStyle != null">
        	AND h_rType IN
	        <foreach collection="roomStyle" item="item" open="(" separator="," close=")">
	         	#{item}
	        </foreach>
        </if>
        <if test="homeCategory != null">
        	AND h_type IN
         	<foreach collection="homeCategory" item="item" open="(" separator="," close=")">
         		#{item}
         	</foreach>
        </if>
        <if test="roomNum != null">
        	AND h_nRoom >= #{roomNum}
        </if>
        <if test="bedNum != null">
        	AND h_nBed >= #{bedNum}
        </if>
        <if test="bathNum != null">
        	AND h_nBath >= #{bathNum}
        </if>
		ORDER BY h_no DESC
		<!-- SELECT h_No, h_rType, h_nHome, h_Addr1, h_Money, h_loc, (SELECT COUNT(re_no)
                                                         		 FROM review
                                                        		 WHERE re_hNo = h_No) "replyCount", (SELECT p_File
                                                                                             		 FROM home_photo
                                                                                              		 WHERE p_hno = h_No AND ROWNUM = 1) "image"
		FROM (SELECT h_No, h_rType, h_nHome, h_Addr1, h_Money, h_loc, rownum as num
      		  FROM (SELECT h_No, h_rType, h_nHome, h_Addr1, h_Money, h_loc
            		FROM zipreg
            		WHERE h_Endday >= SYSDATE AND h_Close = 'n' 
	            	<if test="startDay != null">
	            		AND #{startDay} >= h_startday
	            	</if>
	            	<if test="endDay != null">
	            		AND h_endday >= #{endDay}
	            	</if>
	            	<if test="peopleNum != null">
	            		AND h_nperson >= #{peopleNum}
	            	</if>
            		<if test="roomStyle != null">
            			AND h_rType IN
	            		<foreach collection="roomStyle" item="item" open="(" separator="," close=")">
	            			#{item}
	            		</foreach>
            		</if>
            		<if test="homeCategory != null">
            			AND h_type IN
	            		<foreach collection="homeCategory" item="item" open="(" separator="," close=")">
	            			#{item}
	            		</foreach>
            		</if>
            		<if test="roomNum != null">
            			AND h_nRoom >= #{roomNum}
            		</if>
            		<if test="bedNum != null">
            			AND h_nBed >= #{bedNum}
            		</if>
            		<if test="bathNum != null">
            			AND h_nBath >= #{bathNum}
            		</if>
            		ORDER BY h_no DESC))
		WHERE num BETWEEN 1 AND 10 -->
	</select>
	
	<!-- 집에 등록된 시설가져오기 -->
	<select id="facReg" resultType="Fac_reg">
		SELECT * 
		FROM fac_reg 
		WHERE c_hno = #{h_No}
	</select>
	
	<!-- 예약 -->
	<select id="reserveNo" parameterType="Reserve">
	SELECT MAX(r_no) FROM reserve
	</select>
	<insert id="reserveDoit" parameterType="Reserve">
		<selectKey keyProperty="r_no" resultType="int" order="BEFORE">
			SELECT NVL(MAX(r_no)+1,1) FROM Reserve
		</selectKey>
		INSERT INTO Reserve
		VALUES(#{r_no},#{r_addr},#{r_member},#{r_start},#{r_end},#{r_money},#{r_person})
	</insert>
	<select id="reserveData" parameterType="String" resultType="Reserve">
	select * from reserve
	where r_member=#{r_member}
	</select>
</mapper>
